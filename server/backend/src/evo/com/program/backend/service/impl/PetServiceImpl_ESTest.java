/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 18 13:47:25 GMT 2019
 */

package com.program.backend.service.impl;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import com.program.backend.dao.PetDao;
import com.program.backend.entity.Pet;
import com.program.backend.service.impl.PetServiceImpl;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.javaee.injection.Injector;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class PetServiceImpl_ESTest extends PetServiceImpl_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      PetServiceImpl petServiceImpl0 = new PetServiceImpl();
      PetDao petDao0 = mock(PetDao.class, new ViolatedAssumptionAnswer());
      doReturn((List) null).when(petDao0).queryPet(anyString());
      Injector.inject(petServiceImpl0, (Class<?>) PetServiceImpl.class, "petDao", (Object) petDao0);
      Injector.validateBean(petServiceImpl0, (Class<?>) PetServiceImpl.class);
      List<Pet> list0 = petServiceImpl0.queryPet(":-`~Lg7-J");
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      PetServiceImpl petServiceImpl0 = new PetServiceImpl();
      PetDao petDao0 = mock(PetDao.class, new ViolatedAssumptionAnswer());
      doReturn((List) null).when(petDao0).queryPet(anyString());
      Injector.inject(petServiceImpl0, (Class<?>) PetServiceImpl.class, "petDao", (Object) petDao0);
      Injector.validateBean(petServiceImpl0, (Class<?>) PetServiceImpl.class);
      List<Pet> list0 = petServiceImpl0.queryPet("k-!1");
      assertNull(list0);
  }
}
